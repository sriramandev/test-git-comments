name: Release - Dev Tag Retrieval PR Generator
on:
  workflow_dispatch:
    inputs:
      githubBaseUrl:
        description: 'Github Base URL'
        required: true
        default: 'https://github.com'
      repoOrg:
        description: 'Repository Organization Name'
        required: true
        default: 'vmware-tanzu'
      repoName:
        description: 'Repository Name'
        required: true
        default: 'tanzu-framework'
      commitBranch:
        description: 'Branch from which the commits needs to be used for generating release notes'
        required: true
        default: 'main'
      startCommitSha:
        description: 'Start commit SHA'
        required: true
      endCommitSha:
        description: 'End commit SHA'
        required: true
      startTagName:
        description: 'The tag name for the release'
        required: true
      endTagName:
        description: 'The name of the previous tag to use as the starting point for the release notes'
        required: true

jobs:
  gen_release_notes:
    name: Generate Release Notes
    # Only run this job if we're in the main repo, not a fork.
    # if: github.repository == 'vmwa/re-tanzu/tanzu-framework'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
        id: go

      - name: Install release-note dependency
        run: |
          go get k8s.io/release/cmd/release-notes@latest

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDDHHmmss'

      - name: Generate release notes
        id: get-release-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release-notes \
              --github-base-url ${{ github.event.inputs.githubBaseUrl }} \
              --org ${{ github.event.inputs.repoOrg }} \
              --repo ${{ github.event.inputs.repoName }} \
              --branch ${{ github.event.inputs.commitBranch }} \
              --required-author "" \
              --start-sha ${{ github.event.inputs.startCommitSha }} \
              --end-sha ${{ github.event.inputs.endCommitSha }} \
              --output /tmp/${{ steps.time.outputs.time }}-bin-notes
          echo "RELEASE_NOTE_TOOL<<EOF" >> $GITHUB_ENV
          echo $(sed 's/### Uncategorized/### Miscellaneous/g' /tmp/${{ steps.time.outputs.time }}-bin-notes) >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 'Get Github Release notes'
        uses: octokit/request-action@v2.x
        id: get-github-release-notes
        with:
          route: POST /repos/{owner}/{repo}/releases/generate-notes
          owner: ${{ github.event.inputs.repoOrg }}
          repo: ${{ github.event.inputs.repoName }}
          name: "Generate Release Notes using Github Action"
          tag_name: ${{ github.event.inputs.startTagName }}
          previous_tag_name: ${{ github.event.inputs.endTagName }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Identify New Contributors section'
        id: get-new-contributors
        run: |
          githubOutput="/tmp/${{ steps.time.outputs.time }}-github-output"
          echo "${{ fromJson(steps.get-github-release-notes.outputs.data).body }}" > "$githubOutput"
          echo "NEW_CONTRIBUTORS<<EOF" >> $GITHUB_ENV
          echo $(sed -n '/## New Contributors/,$p'  $githubOutput) >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 'Generate the release notes'
        shell: bash
        run: |
          NEW_CONTRIBUTORS=$(sed -n '/## New Contributors/,$p' <<< ${{ fromJson(steps.get-github-release-notes.outputs.data).body }})
          RELEASE_NOTES=$(cat <<-END
            ## Tanzu CLI Installation Instructions

            If you are installing Tanzu CLI using the artifacts published as part of this release, please follow the [instructions](https://github.com/vmware-tanzu/tanzu-framework/blob/main/docs/cli/getting-started.md).

            ${{ env.RELEASE_NOTE_TOOL }}

            ${{ env.NEW_CONTRIBUTORS }}
          END
          )
          echo "$RELEASE_NOTES"